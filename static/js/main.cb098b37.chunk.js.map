{"version":3,"sources":["assets/images/logo.png","assets/images/icon-category.png","modules/Activity/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Activity","props","handleSubmit","obj","e","setState","render","renderSubComp","state","onClose","addPlus","addClass","this","show","className","onClick","src","data","categoryicon","alt","title","category","subtitle","totaldays","deltadays","totalxp","deltaxp","Component","defaultProps","activityUpdateStatus","App","showModal","iconcategory","href","logo","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb098b37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.281e5f7b.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-category.c6acdec0.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Activity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      render:'',\n    };\n  }\n\n  static defaultProps = {\n    totaldays: 287,\n    deltadays: +26,\n    totalxp: 3244,\n    deltaxp: -420,\n    activityUpdateStatus: '',\n    title: \"Bachelor of Communications (Media)\",\n    subtitle: \"Bachelor Degree\",\n    category: \"Education\",\n    categoryicon: \"[IMG]\",\n  };\n\n  handleSubmit = (obj, e) => {\n    this.setState({render:obj});\n  }\n\n  renderSubComp = () => {\n    switch(this.state.render){\n      case 'openactivity':\n        return (\n          <div>Progress Updated!</div>\n        )\n      default: return ''\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n    this.setState({ render: false });\n  };\n\n  addPlus = (e) => {\n    if (e > 0) {\n      return '+'\n    }\n  }\n\n  addClass = (e) => {\n    if (!e) {\n      return ' out '\n    }\n  }\n\n  render() {\n    if(!this.props.show){\n      return null;\n    }\n\n    return (\n      <div className={this.addClass(this.props.show) + \" modal absolute top-0 left-0 right-0 bottom-0 bg-gradient-blue light-blue san-serif center tc\"}>\n        <div className=\"w-100 center\">\n          {/* ACTIVITY HEADING SECTION */}\n          <section className=\"bg-gradient-blue-title\">\n            <div className=\"flex justify-center items-center pt5\">\n              <button className=\"f3 fw4 no-underline grow v-mid light-blue bg-transparent br3 bn ph2 pv1 absolute right-2 top-2 open-sans\" \n                onClick={e => {\n                  this.onClose(e);\n                }}\n              >x\n              </button>\n              <div className=\"pa0 tl nb4 mt2\">\n                <img\n                  src={this.props.data.categoryicon}\n                  className=\"dib w4 icon-category\"\n                  alt=\"{this.props.data.title}\"\n                />\n              </div>\n              <div className=\"pa3 tl nb3 mt0\">\n                <h1 className=\"ma0 pb2 f3-l f4-m f4-s fw6 light-blue\">{this.props.data.title}</h1>\n                <span>\n                  <label className=\"light-purple\">{this.props.data.category} | </label> {this.props.data.subtitle}\n                </span>\n              </div>\n            </div>\n          </section>\n\n          {/* ACTIVITY BODY SECTION */}\n          <section className=\"bg-gradient-blue-content pt5\">\n            <div className=\"mw8 w-100 center\">\n              <h2 className=\"f3-l f4-m f4-s fw6 pb5\">Activity updates</h2>\n              <div className=\"dt center w5\">\n                <div className=\"dtc w-50 nowrap tl f5\">\n                  <span className=\"f4 icon-clock pl2\">{this.props.data.totaldays}</span> days\n                </div>\n                <div className=\"dtc w-50 nowrap tr f4\">\n                <span className=\"light-purple f3\">{this.addPlus(this.props.data.deltadays)}{this.props.data.deltadays}</span> days\n                </div>\n              </div>\n              <div className=\"dt center w5\">\n                <div className=\"dtc w-50 nowrap tl f5\">\n                  <span className=\"f4 icon-arrow-up pl2\">{this.props.data.totalxp}</span> XP\n                </div>\n                <div className=\"dtc w-50 nowrap tr f4\">\n                  <span className=\"light-purple f3\">{this.addPlus(this.props.data.deltaxp)}{this.props.data.deltaxp}</span> XP\n                </div>\n              </div>\n\n              <div className=\"h2 mt4 mb0 f5 light-purple\">{this.renderSubComp()}</div>\n\n              <button className=\"primary-button f4 no-underline grow v-mid white bg-transparent bw1 ba1 b--light-blue br3 ph4 pv3 mb3 mt1\"\n                onClick={ () => {\n                  this.handleSubmit('openactivity')\n                }}\n              >\n                Continue\n              </button>\n              \n              <div className=\"mt3 az-progress-bar\">\n                <span className=\"b1 br-100 ma2 pa1 bg-light-blue dib\"></span>\n                <span className=\"b1 br-100 ma2 pa1 bg-light-purple dib\"></span>\n                <span className=\"b1 br-100 ma2 pa1 bg-light-blue dib\"></span>\n              </div>\n\n            </div>\n          </section>\n        </div>\n      </div>\n    )\n  }\n}\n\nActivity.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  categoryicon: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  totaldays: PropTypes.number.isRequired,\n  totalxp: PropTypes.number,\n  deltadays: PropTypes.number.isRequired,\n  deltaxp: PropTypes.number,\n}\n\nexport default Activity;","import React, { Component } from 'react';\nimport Activity from './modules/Activity';\nimport './assets/sass/index.scss';\nimport logo from './assets/images/logo.png';\nimport iconcategory from './assets/images/icon-category.png';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      totaldays: 287,\n      deltadays: +26,\n      totalxp: 3244,\n      deltaxp: -420,\n      activityUpdateStatus: '',\n      title: \"Bachelor of Communications (Media)\",\n      subtitle: \"Bachelor Degree\",\n      category: \"Education\",\n      categoryicon: iconcategory,\n    };\n  }\n  \n  showModal = e => {\n    this.setState({\n      show: !this.state.show,\n    });\n  };\n  \n  render() {\n    return (\n      <div className=\"page vh-100 bg-gradient-blue dt w-100 bg-right no-repeat cover relative open-sans\">\n        <header>\n          <div className=\"cover bg-left bg-center bg-image\">\n            <div className=\"bg-black-80 pb5 pb6-m pb7-l\">\n              <nav className=\"dt w-100 mw8 center\">\n                <div className=\"dtc w2 v-mid pa3\">\n                  <a href=\"/\" className=\"dib w3 h3 pa1 grow-large\">\n                    <img\n                      src={logo}\n                      className=\"logo\"\n                      alt=\"AAZ\"\n                    />\n                  </a>\n                </div>\n              </nav>\n              <div className=\"tc mt4 mt5-m mt6-l ph3\">\n                <h1 className=\"f2 f1-l fw2 white-90 mb0 lh-title\">Student's Portal</h1>\n                <h2 className=\"fw1 f3 white-80 mt3 mb4\">Connect to real employment experiences</h2>\n                <button className=\"primary-button f4 no-underline grow v-mid bg-dark-gray white ba b--light-blue br3 ph4 pv3 mb3\" \n                  onClick={\n                    e => {\n                      this.showModal();\n                    }\n                  }\n                >\n                  Activity updates\n                </button>\n\n                <div className={this.state.show? 'modal-active':''}>\n                  <Activity data={this.state} onClose={this.showModal} show={this.state.show} />\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}